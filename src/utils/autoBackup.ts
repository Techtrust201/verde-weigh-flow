/**
 * Initialisation de la sauvegarde automatique
 * √Ä appeler au d√©marrage de l'application
 */

import { fileBackup } from "@/services/fileBackup";
import { opfsBackup } from "@/services/OPFSBackupService";
import { backupManager } from "@/services/BackupManager";

export async function initializeAutoBackup(): Promise<void> {
  console.log("üîÑ Initialisation de la sauvegarde automatique...");

  try {
    // Initialiser le gestionnaire de sauvegarde centralis√©
    await backupManager.initialize();

    // D√©marrer la sauvegarde automatique avec la m√©thode la plus appropri√©e
    backupManager.startAutoBackup(5); // 5 minutes par d√©faut

    // Restaurer les donn√©es si n√©cessaire
    await backupManager.restoreBackup();

    console.log("‚úÖ Sauvegarde automatique initialis√©e via BackupManager");
  } catch (error) {
    console.error(
      "‚ùå Erreur lors de l'initialisation de la sauvegarde automatique:",
      error
    );

    // Fallback sur les m√©thodes individuelles si le BackupManager √©choue
    try {
      console.log("‚ö†Ô∏è Tentative de fallback sur les services individuels...");

      // 1. Initialiser OPFS (prioritaire car plus fiable)
      try {
        await opfsBackup.initialize();

        // V√©rifier si OPFS est disponible
        if (opfsBackup.isSupported()) {
          console.log("‚úÖ OPFS disponible - Utilisation comme fallback");
          opfsBackup.startAutoBackup();
          return;
        }
      } catch (opfsError) {
        console.warn("‚ö†Ô∏è Erreur OPFS:", opfsError);
      }

      // 2. Fallback sur File System API
      try {
        await fileBackup.initialize();
        await fileBackup.initializeDefaultBackupFile();
        fileBackup.startAutoBackup();
        console.log("‚úÖ Fallback sur File System API r√©ussi");
        return;
      } catch (fsError) {
        console.warn("‚ö†Ô∏è Erreur File System API:", fsError);
      }

      // 3. Dernier recours: IndexedDB
      console.log("‚ö†Ô∏è Fallback sur IndexedDB...");
      await fileBackup.saveToIndexedDB();
      console.log("‚úÖ Donn√©es sauvegard√©es dans IndexedDB");
    } catch (fallbackError) {
      console.error("‚ùå Erreur critique lors du fallback:", fallbackError);
    }
  }
}

// La sauvegarde automatique est maintenant initialis√©e depuis App.tsx
